version: 2.1

orbs:
  windows: circleci/windows@2.4

jobs:
  test:
    description: Setup and run application tests
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-packages-v1-{{ checksum "SnailRacing.Ralf/SnailRacing.Ralf.csproj" }}
      - run:
          name: "Add Slimget source"
          command: dotnet nuget add source https://nuget.emzi0767.com/api/v3/index.json -n Slimget
      - run:
          name: "Install project dependencies"
          command: dotnet restore
      - save_cache:
          paths:
            - C:\Users\circleci\.nuget\packages
          key: dotnet-packages-v1-{{ checksum "SnailRacing.Ralf/SnailRacing.Ralf.csproj" }}
      - run:
          name: "Run Application Tests"
          command: dotnet test -v n -l:trx --results-directory:test_coverage --collect:"XPlat Code Coverage"
      - run:
          name: "Print Working Directory"
          command: pwd
      - store_test_results:
          path: /root/project/test_coverage
      - store_artifacts:
          path: /root/project/test_coverage
  build:
    description: Build application with Release configuration
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - run:
          name: "Add Slimget source"
          command: dotnet nuget add source https://nuget.emzi0767.com/api/v3/index.json -n Slimget
      - run:
          name: "Build Application according to some given configuration"
          command: dotnet build --configuration Release
  build-master:
    environment:
      IMAGE_NAME: lawrab/ralf-bot
    docker:
      - image: circleci/buildpack-deps:stretch
      steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Build Docker image
            command: docker build -t $IMAGE_NAME:latest .
workflows:
  test_and_build:
    jobs:
      - test
      - build:
          requires:
            - test